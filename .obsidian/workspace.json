{
  "main": {
    "id": "759caa853a485c25",
    "type": "split",
    "children": [
      {
        "id": "e70c2477f4be633a",
        "type": "tabs",
        "children": [
          {
            "id": "078281b382245921",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Leetcode/287. Find the Duplicate Number.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "55cecf9f71731736",
    "type": "split",
    "children": [
      {
        "id": "ad7e1c7a56f1412d",
        "type": "tabs",
        "children": [
          {
            "id": "0797987a14150268",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "7e5614cb36c96789",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "a6eae57348ba748d",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "c27cdf432a4115ed",
    "type": "split",
    "children": [
      {
        "id": "02971d58ecbe967e",
        "type": "tabs",
        "children": [
          {
            "id": "ac9c1f55aa6afb7b",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Leetcode/287. Find the Duplicate Number.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "command-palette:Open command palette": false,
      "markdown-importer:Open format converter": false
    }
  },
  "active": "078281b382245921",
  "lastOpenFiles": [
    "Leetcode/287. Find the Duplicate Number.md",
    "Leetcode/Medium Problems.md",
    "Leetcode/Easy Problems.md",
    "Leetcode/137. Single Number II.md",
    "Leetcode/My Notes - LeetCode.pdf",
    "Real Python/Maze Solver.md",
    "Real Python",
    "DSA/BST from Preorder Traversal.md",
    "DSA/Become Master In Graphs.md",
    "Trash/Equations.md",
    "Leetcode/847. Shortest Path Visiting All Nodes.md",
    "DSA/Dynamic Programming/97. Interleaving String.md",
    "DSA/Algorithms/Graph Algorithms + Problems to Practice.md",
    "Leetcode/421. Maximum XOR of Two Numbers in an Array.md",
    "Leetcode/124. Binary Tree Maximum Path Sum.md",
    "DSA/Next Permutation.md",
    "DSA/Dynamic Programming/From good to great. How to approach most of DP problems..md",
    "DSA/Dynamic Programming/198. House Robber.md",
    "DSA/Dynamic Programming/Untitled",
    "DSA/Dynamic Programming/Dynamic Programming.md",
    "Pasted image 20230615112341.png",
    "DSA/Dynamic Programming/746. Min Cost Climbing Stairs âœ”.md",
    "DSA/Dynamic Programming",
    "DSA/Algorithms/Power set.md",
    "DSA/Recursion on Subsequences.md",
    "Leetcode/Glossary.md",
    "Leetcode/Hard Problems.md",
    "Leetcode/A general approach to backtracking questions in Java (Subsets, Permutations, Combination Sum, Palind....md",
    "Leetcode/Real Python/Maze Solver.md",
    "().md",
    "Leetcode/Real Python",
    "pr.canvas",
    "DSA/Complexity Analysis.md",
    "DSA/Searching & Sorting",
    "DSA/Algorithms",
    "DSA",
    "GFG",
    "LeetCode/leetcode_obsidian"
  ]
}